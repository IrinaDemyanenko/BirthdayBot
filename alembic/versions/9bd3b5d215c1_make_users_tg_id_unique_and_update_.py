"""Make users.tg_id unique and update friends.user_id FK

Revision ID: 9bd3b5d215c1
Revises: 3391f1a7a3b7
Create Date: 2025-02-24 13:59:18.188445

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9bd3b5d215c1'
down_revision: Union[str, None] = '3391f1a7a3b7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('friends', 'user_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False)

    # Делаем users.tg_id уникальным
    op.create_unique_constraint('uq_users_tg_id', 'users', ['tg_id'])

    # Удаляем старый внешний ключ friends.user_id → users.id
    op.drop_constraint('friends_user_id_fkey', 'friends', type_='foreignkey')

    # Создаём новый внешний ключ friends.user_id → users.tg_id
    op.create_foreign_key('friends_user_id_fkey', 'friends', 'users', ['user_id'], ['tg_id'])



def downgrade() -> None:
    # Откатываем изменения
    op.drop_constraint('uq_users_tg_id', 'users', type_='unique')
    op.drop_constraint('friends_user_id_fkey', 'friends', type_='foreignkey')
    op.create_foreign_key('friends_user_id_fkey', 'friends', 'users', ['user_id'], ['id'])
    op.alter_column('friends', 'user_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False)
